const mongoose = require('mongoose');
require('dotenv').config();

// Connexion MongoDB
mongoose.connect(process.env.MONGO_URI || 'mongodb://localhost:27017/musee_mcn')
  .then(() => console.log('‚úÖ Connect√© √† MongoDB'))
  .catch(err => {
    console.error('‚ùå Erreur connexion MongoDB:', err);
    process.exit(1);
  });

const Artwork = require('../src/models/Artwork');

async function cleanBase64Images() {
  try {
    console.log('\nüîç Recherche des ≈ìuvres avec images base64...\n');

    // Trouver toutes les ≈ìuvres
    const artworks = await Artwork.find({});
    console.log(`üìä Total d'≈ìuvres: ${artworks.length}`);

    let cleanedCount = 0;
    let base64Count = 0;

    for (const artwork of artworks) {
      let hasBase64 = false;
      const cleanedImages = [];

      // V√©rifier chaque image
      for (const image of artwork.images) {
        // D√©tecter les images base64 (commencent par data:image)
        if (image.startsWith('data:image')) {
          hasBase64 = true;
          base64Count++;
          console.log(`‚ùå Image base64 d√©tect√©e dans "${artwork.title.fr || artwork.title.en}":`);
          console.log(`   Taille: ${(image.length / 1024).toFixed(2)} KB`);
          // Ne pas ajouter cette image √† cleanedImages
        } else {
          // Garder les images normales (Cloudinary ou URLs)
          cleanedImages.push(image);
        }
      }

      // Si des images base64 ont √©t√© trouv√©es, mettre √† jour l'≈ìuvre
      if (hasBase64) {
        artwork.images = cleanedImages;
        await artwork.save();
        cleanedCount++;
        console.log(`‚úÖ ≈íuvre "${artwork.title.fr || artwork.title.en}" nettoy√©e`);
        console.log(`   Images restantes: ${cleanedImages.length}\n`);
      }
    }

    console.log('\nüìà R√©sum√©:');
    console.log(`   - ≈íuvres nettoy√©es: ${cleanedCount}`);
    console.log(`   - Images base64 supprim√©es: ${base64Count}`);
    console.log(`   - ≈íuvres sans probl√®me: ${artworks.length - cleanedCount}`);

    if (cleanedCount > 0) {
      console.log('\n‚ö†Ô∏è  IMPORTANT:');
      console.log('   Les images base64 ont √©t√© supprim√©es.');
      console.log('   Veuillez re-uploader les images via Cloudinary depuis l\'interface admin.');
    }

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await mongoose.connection.close();
    console.log('\n‚úÖ Connexion ferm√©e');
  }
}

// Ex√©cuter le script
cleanBase64Images();
